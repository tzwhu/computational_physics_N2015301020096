
程序1：源程序，作出包括初状态在内的10次移动过程，在10*10的图表中。
import math
import pylab as pl
import numpy as np

r=1
M=100
xi=30
k=1000*10**(-4)
TS=9
xl=500000


#定义作图数组：
c=[] 
for c1 in range(0,M+1):
             c.append(c1/100)
else:
    c=c
#定义系统参量
h=TS+1   
    
#定义t=O状态
a=np.zeros((M+1,3))
for n in range(2,M):
    #a[n-1][1-1]=math.exp(-k*(n-xi)**2)+(n-xi)**3
    a[n-1][1-1]=(n-xi)**3
    a=a
#定义t=1状态：
for n in range(2,M):
    a[n-1][2-1]=a[n-1][1-1]
else:
    a=a
#定义t=3状态
for i in range(1,M-1) :
    j=1 
    a[i][j+1]=2*(1-r**2)*a[i][j]-a[i][j-1]+(r**2)*(a[i+1][j]+a[i-1][j])#最上一行始终为0
else:
    print("int")
        
     
#画出t=0,1的波形
pl.figure(figsize=(15,1.2*h))
pl.subplot(h,1,1)
pl.xticks(np.linspace(0,M,0))
pl.ylim(-xl,xl)
pl.plot(c,a[:,1],label=0,color='r')
pl.legend(loc='upper right')
pl.subplot(h,1,2)
pl.xticks(np.linspace(0,M,0))
pl.ylim(-xl,xl)
pl.plot(c,a[:,2],label=1,color='g')
pl.legend(loc='upper right')


t=1 
while t<=TS-1:
    for i in range(1,M-1):
          a[i][0]=a[i][1]
          a[i][1]=a[i][2]
    else:
          j=1#之后再调用注意初始化
          for i in range(1,M-1):
               a[i][j+1]=2*(1-r**2)*a[i][j]-a[i][j-1]+(r**2)*(a[i+1][j]+a[i-1][j])
          else:
              pl.subplot(h,1,t+2)
              pl.ylim(-xl,xl)
              pl.xticks(np.linspace(0,20,0))
              pl.plot(c,a[:,2],label=t+1,color='blue')
              pl.legend(loc='upper right')
          t=t+1
else:
    pl.subplot(h,1,h)
    pl.xticks(np.linspace(0,M/100,6))
    pl.show()
    print("over")#此时J=1
          
 
 

 

程序2：对比作出r=0.1,0.2,0.3…0.9,1时刻的波形
 
 
程序3：对比作出r=0.3,0.5,0.7时刻的波形
 
 

程序4：将两张r=0.1，0.99同一张图中对比
 
程序5：将r=0.99，1.01同一张图中对比
import math
import pylab as pl
import numpy as np

r=0.99
r1=1.01
M=100
xi=30
k=1000*10**(-4)
TS=50
xl=1.01


#定义作图数组：
c=[] 
for c1 in range(0,M+1):
             c.append(c1/100)
else:
    c=c
#定义系统参量
h=TS+1   
    
#定义t=0状态
a=np.zeros((M+1,3))
for n in range(2,M):
    a[n-1][1-1]=math.exp(-k*(n-xi)**2)
else:
    a=a
    
a1=np.zeros((M+1,3))
for n in range(2,M):
    a1[n-1][1-1]=math.exp(-k*(n-xi)**2)
else:
    a1=a1
#定义t=1状态：
for n in range(2,M):
    a[n-1][2-1]=a[n-1][1-1]
else:
    a=a
    
for n in range(2,M):
    a1[n-1][2-1]=a1[n-1][1-1]
else:
    a1=a1
#定义t=2状态
for i in range(1,M-1) :
    j=1 
    a[i][j+1]=2*(1-r**2)*a[i][j]-a[i][j-1]+(r**2)*(a[i+1][j]+a[i-1][j])#最上一行始终为0
else:
    print("int")

for i in range(1,M-1) :
    j=1 
    a1[i][j+1]=2*(1-r1**2)*a1[i][j]-a1[i][j-1]+(r1**2)*(a1[i+1][j]+a1[i-1][j])#最上一行始终为0
else:
    print("int")
        
     
#画出t=0,1的波形
pl.figure(figsize=(15,1.2*h))
pl.subplot(h,1,1)
pl.xticks(np.linspace(0,M,0))
pl.ylim(-xl,xl)
pl.plot(c,a[:,1],label=0,color='r')
pl.plot(c,a1[:,1],label=0,color='r')
pl.legend(loc='upper right')
pl.subplot(h,1,2)
pl.xticks(np.linspace(0,M,0))
pl.ylim(-xl,xl)
pl.plot(c,a[:,2],label=1,color='g')
pl.plot(c,a1[:,2],label=1,color='green')
pl.legend(loc='upper right')




t=1 
while t<=TS-1:
    for i in range(1,M-1):
          a[i][0]=a[i][1]
          a[i][1]=a[i][2]
          a1[i][0]=a1[i][1]
          a1[i][1]=a1[i][2]
    else:
          j=1#之后再调用注意初始化
          for i in range(1,M-1):
               a[i][j+1]=2*(1-r**2)*a[i][j]-a[i][j-1]+(r**2)*(a[i+1][j]+a[i-1][j])
               a1[i][j+1]=2*(1-r1**2)*a1[i][j]-a1[i][j-1]+(r1**2)*(a1[i+1][j]+a1[i-1][j])
          else:
              pl.subplot(h,1,t+2)
              pl.ylim(-xl,xl)
              pl.xticks(np.linspace(0,20,0))
              pl.plot(c,a[:,2],label=r,color='blue')
              pl.plot(c,a1[:,2],label=r1,color='lightblue')
              pl.legend(loc='upper right')
          t=t+1
else:
    pl.subplot(h,1,h)
    pl.xticks(np.linspace(0,M/100,6))
    pl.show()
    print("over")#此时J=1
          
 

 
引入波包+正弦波（导致驻波）：
 
